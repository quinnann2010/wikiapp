// Generated by view binder compiler. Do not edit!
package vn.edu.usth.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.wikipedia.R;

public final class FragmentForgotPasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton closeForgotButton;

  @NonNull
  public final EditText emailInput;

  @NonNull
  public final RelativeLayout loginBar;

  @NonNull
  public final Button resetPasswordButton;

  private FragmentForgotPasswordBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton closeForgotButton, @NonNull EditText emailInput,
      @NonNull RelativeLayout loginBar, @NonNull Button resetPasswordButton) {
    this.rootView = rootView;
    this.closeForgotButton = closeForgotButton;
    this.emailInput = emailInput;
    this.loginBar = loginBar;
    this.resetPasswordButton = resetPasswordButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentForgotPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentForgotPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_forgot_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentForgotPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close_forgot_button;
      ImageButton closeForgotButton = ViewBindings.findChildViewById(rootView, id);
      if (closeForgotButton == null) {
        break missingId;
      }

      id = R.id.email_input;
      EditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.login_bar;
      RelativeLayout loginBar = ViewBindings.findChildViewById(rootView, id);
      if (loginBar == null) {
        break missingId;
      }

      id = R.id.reset_password_button;
      Button resetPasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (resetPasswordButton == null) {
        break missingId;
      }

      return new FragmentForgotPasswordBinding((LinearLayout) rootView, closeForgotButton,
          emailInput, loginBar, resetPasswordButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
